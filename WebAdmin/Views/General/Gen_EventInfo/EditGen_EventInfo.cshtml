@using CLL
@model BDO.Core.DataAccessObjects.Models.gen_eventinfoEntity
@inject CLL.Localization.LocalizeService SharedLocalizer

@using Microsoft.Extensions.Options
@{
    ViewData["Title"] = "Edit View Gen  Event Info";
}

 <style>
        

        /* Styling for remove button */
        .dz-remove {
            background-color: red;
            color: white;
            padding: 5px;
            cursor: pointer;
            border: none;
            border-radius: 3px;
        }
    </style>


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-footer">
                <h5 class="card-title">@SharedLocalizer.GetLocalizedHtmlString("EDIT_GEN_EVENTINFO")</h5>
            </div>
            <!-- /.card-header -->
            <form method="POST" id="frmEditGen_EventInfo" class="my-login-validation" novalidate="" autocomplete="off" enctype="multipart/form-data">
                <div class="card-body">
                    <div class="row ">
                        <input asp-for="eventid" type="hidden" />
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="labelNormal required " asp-for="eventcategoryid"></label>
                                @await Component.InvokeAsync("S2Gen_EventCategory", new { selectid = "eventcategoryid", preloaded = ViewBag.preloadedDatagen_eventcategory, isReadOnly = false, multiple = false, isRequired = true, pkey = -99 })
                                <span asp-validation-for="eventcategoryid" class="eventcategoryiderror text-danger " id="eventcategoryiderror"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="labelNormal required " asp-for="eventorganizedby"></label>
                                @await Component.InvokeAsync("S2FilterGen_Unit", new { selectid = "eventorganizedby", preloaded = ViewBag.preloadedDatagen_unit, isReadOnly = false, multiple = false, isRequired = true, pkey = -99 })
                                <span asp-validation-for="eventorganizedby" class="eventorganizedbyerror text-danger " id="eventorganizedbyerror"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="labelNormal required " asp-for="eventcode"></label>
                                <input asp-for="eventcode" class="form-control" autocomplete="off" readonly />
                                <span asp-validation-for="eventcode" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="labelNormal required " asp-for="eventname"></label>
                                <input asp-for="eventname" class="form-control" required></input>
                                <span asp-validation-for="eventname" class="eventnameerror text-danger " id="eventnameerror"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="labelNormal required " asp-for="eventstartdate"></label>
                                <div class="input-group date bs-datepicker">
                                    <input asp-for="eventstartdate" class="form-control " type="text" placeholder="dd/mm/yyyy" required />
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="far fa-calendar-alt"></i>
                                        </span>
                                    </div>
                                </div>
                                <span asp-validation-for="eventstartdate" class="text-danger"></span>
                            </div>


                        </div>
                      
                    </div>
                    <div class="row ">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="labelNormal  " asp-for="eventdescription"></label>
                                <textarea cols="40" rows="5" asp-for="eventdescription" class="form-control" autocomplete="off"></textarea>
                                <span asp-validation-for="eventdescription" class="text-danger"></span>
                            </div>
                        </div>
                        
                    </div>
                    
                    <div class="row">
                        <div class="col-6 ">
                            <div class="form-group">
                                <label class="labelNormal  ">Files</label>
                                <div id="myDropzone" class="dropzone">
                                    <div class="dz-message">
                                        <h3>Drag and drop files here or click to upload</h3>
                                    </div>

                                </div>
                            </div>
                            <!-- This hidden input will store the file in the form submission -->
                            <input type="hidden" id="uploadedFiles" name="files" />
                        </div>

                        <div class="col-6 ">
                            <table id="fileTable" class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>File Name</th>
                                        <th>File Description</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                   
                    <div class="row btn-toolbar">
                        <div class="col-md-6 ">
                            <div class="form-group">
                                <button type="submit" id="btnEditGen_EventInfo" class="btn btn-primary btn-md"><i class="fa fa-save"></i> @SharedLocalizer.GetLocalizedHtmlString("SUBMIT_REQUEST")</button>
                                <button id="btnGoBackGen_EventInfo" class="btn btn-secondary btn-md "><i class="fas fa-arrow-circle-left"></i> @SharedLocalizer.GetLocalizedHtmlString("GO_BACK")</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <!-- ./card-body -->
        <div class="card-footer">
            <div class="row">
                <div class="col-md-12">

                    <!-- /.description-block -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.card-footer -->
    </div>
    <!-- /.card -->
</div>
<!-- /.col -->


@section Scripts {
    <script src="~/lib/customjs/Gen_EventInfo/Gen_EventInfo.js"></script>
    <script>
        $(function () {
            // var datepicker = $.fn.datepicker.noConflict(); return $.fn.datepicker to previously assigned value
            // $.fn.bootstrapDP = datepicker;
            $('.bs-datepicker').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                clearBtn: true,
                startView: 0,
                language: "en",
                todayHighlight: true
            });
        })
    </script>
    <script>
        var LandingGen_EventInfo = "/Gen_EventInfo/LandingGen_EventInfo";

        function RedirectToLanding(params) {
            if (typeof params != 'undefined')
                window.location.href = params;
        }
        // Initialize Dropzone but prevent automatic upload
        Dropzone.autoDiscover = false;
 
        var myDropzone = new Dropzone("#myDropzone",
            {
                url: "/Gen_EventInfo/EditGen_EventInfo",  // API endpoint
                method: "post",
                paramName: "files",  // The name for the files being uploaded
                uploadMultiple: true,  // Allow multiple file uploads
                //maxFilesize: 5,  // Max file size in MB
                parallelUploads: 5,  // Number of files to upload in parallel
                autoProcessQueue: false,  // Don't upload files immediately
                addRemoveLinks: true,
                acceptedFiles: ".jpeg,.jpg,.png,.gif,.pdf",             
                init: function () {
                    var dz = this;

                    dz.on("addedfile", function(file) {
                          var descriptionInput = document.createElement("input");
                          descriptionInput.setAttribute("type", "text");
                          descriptionInput.setAttribute("name", "fileDescription");
                          descriptionInput.setAttribute("class", "file-description");
                          descriptionInput.setAttribute("placeholder", "Enter file description");
                          file.previewElement.appendChild(descriptionInput);
                        });

                    var dataobject = {
                        eventid: $("#eventid").val(),
                    };

                    function LoadFiles(){
                        ajaxPostObjectHandler("/Gen_EventInfo/GetAllFileByEventId", dataobject, function (files) {
                            const $tableBody = $('#fileTable tbody');
                            $tableBody.empty(); // Clear existing rows

                            files.forEach(file => {
                                const $row = $('<tr></tr>');
                                const $fileNameCell = $('<td></td>').text(file.filetitle);
                                const $fileNameDescription = $('<td></td>').text(file.filedescription);

                                const $actionsCell = $('<td></td>');

                                const $downloadLink = $('<a class="btn btn-primary btn-sm""></a>').attr({
                                    href: file.FileUrl,
                                    text: 'Download',
                                    download: file.FileUrl
                                }).text('Download');
                        
                                const $editButton = $('<button type="button" class="btn btn-danger btn-sm""></button>').text('Delete').on('click', function() {
                                    deleteFile(file);
                                });

                                $actionsCell.append($downloadLink).append(' ').append($editButton);
                                $row.append($fileNameCell).append($fileNameDescription).append($actionsCell);
                                $tableBody.append($row);
                            });
                        
                        }, true);
                    }
                   
                    LoadFiles();
                   
                    // On form submission
                    document.querySelector("#btnEditGen_EventInfo").addEventListener("click", function (e) {
                        e.preventDefault();

                        var formData = new FormData();
                        formData.append("eventid", $("#eventid").val());
                        formData.append("eventcategoryid", $("#eventcategoryid").val());
                        formData.append("eventorganizedby", $("#eventorganizedby").val());
                        formData.append("eventcode", $("#eventcode").val());
                        formData.append("eventname", $("#eventname").val());
                        formData.append("eventstartdate", GetDateFromTextBox($("#eventstartdate").val()));
                        // formData.append("eventenddate", $("#eventenddate").val());                        
                        formData.append("eventdescription", tinymce.get("eventdescription").getContent());
                        // formData.append("eventdescription1", tinymce.get("eventdescription1").getContent());
                        // formData.append("eventdescription2", tinymce.get("eventdescription2").getContent());
                        // formData.append("eventspecialnote", tinymce.get("eventspecialnote").getContent());

                        if (dz.getQueuedFiles().length > 0) {
                            dz.processQueue();
                            dz.on("queuecomplete", function () {
                                let index=0;
                                dz.getAcceptedFiles().forEach(file => {
                                    var descriptionInput = file.previewElement.querySelector(".file-description");
                                    console.log(descriptionInput.value)
                                    if(descriptionInput.value)
                                        formData.append("postedFiles["+index+"].fileDescription", descriptionInput.value);
                                    else
                                           formData.append("postedFiles["+index+"].fileDescription", "");
                                    formData.append("postedFiles["+index+"].file", file);
                                    index++;
                                });

                                SubmitFormData(formData);
                            });
                        }
                        else {
                            SubmitFormData(formData);
                        }

                    });

                    function  deleteFile(file) {
                        console.log(file);
                        var dataobject = {
                            eventfileid:file.eventfileid,
                            eventid: file.eventid,
                            FileUrl:file.FileUrl ,
                            filename:file.filename
                        };
                        ajaxPostObjectHandler("/Gen_EventInfo/DeleteGen_EventFileInfo", dataobject, function (response) {
                                 LoadFiles();
                        }, true);
                    }

                    function SubmitFormData(formData) {
                        console.log(formData);
                        ajaxPostObjectHandlerWithFiles("/Gen_EventInfo/EditGen_EventInfo", formData, function (response) {
                            if (response._ajaxresponse.responsestatus == "success") {
                                showSuccessAlert("Success", response._ajaxresponse.responsetext, "OK", RedirectToLanding, LandingGen_EventInfo);
                            }
                        }, false);
                    }

                }

            });


    </script>

}





